parserOptions:
    sourceType: "module"
    ecmaVersion: 6

env:
    es6: true
    node: true
    browser: true

extends: "eslint:recommended"

# http://eslint.org/docs/rules/
rules:
    # Possible errors
    no-cond-assign: "error"
    no-console: "off"
    no-constant-condition: "error"
    no-control-regex: "error"
    no-debugger: "warn"
    no-dupe-args: "error"
    no-dupe-keys: "error"
    no-duplicate-case: "error"
    no-empty-character-class: "error"
    no-empty: "error"
    no-ex-assign: "error"
    no-extra-boolean-cast: "error"
    no-extra-semi: "error"
    no-func-assign: "error"
    no-invalid-regexp: "error"
    no-irregular-whitespace: "error"
    no-obj-calls: "error"
    no-regex-spaces: "error"
    no-sparse-arrays: "error"
    no-template-curly-in-string: "error"
    no-unexpected-multiline: "error"
    no-unreachable: "error"
    no-unsafe-finally: "error"
    no-unsafe-negation: "error"
    use-isnan: "error"
    valid-typeof: "error"

    # Best practices
    array-callback-return: "error"
    block-scoped-var: "warn"
    class-methods-use-this: "error"
    complexity: ["error", 10]
    curly: ["error", "all"]
    dot-location: ["error", "property"]
    dot-notation: "warn"
    eqeqeq: ["error", "smart"]
    no-alert: "error"
    no-caller: "error"
    no-div-regex: "error"
    no-else-return: "error"
    no-empty-function: "error"
    no-empty-pattern: "error"
    no-eval: "error"
    no-extend-native: "error"
    no-extra-bind: "error"
    no-extra-label: "error"
    no-fallthrough: "error"
    no-global-assign: "error"
    no-implicit-coercion: "error"
    no-implicit-globals: "warn"
    no-implied-eval: "error"
    no-iterator: "error"
    no-labels: "error"
    no-multi-str: "error"
    no-new-func: "error"
    no-new-wrappers: "error"
    no-octal-escape: "warn"
    no-octal: "error"
    no-param-reassign: "warn"
    no-proto: "error"
    no-redeclare: "error"
    no-return-assign: "error"
    no-return-await: "error"
    no-self-assign: "error"
    no-self-compare: "error"
    no-sequences: "error"
    no-throw-literal: "error"
    no-unmodified-loop-condition: "warn"
    no-unused-expressions: "error"
    no-unused-labels: "error"
    no-useless-call: "error"
    no-useless-concat: "error"
    no-useless-escape: "error"
    no-useless-return: "error"
    no-void: "error"
    no-warning-comments: "warn"
    radix: "error"
    require-await: "error"
    wrap-iife: ["error", "outside"]
    yoda: "error"

    # Variables
    no-catch-shadow: "error"
    no-delete-var: "off"
    no-label-var: "error"
    no-shadow-restricted-names: "error"
    no-shadow: "error"
    no-undef-init: "error"
    no-undef: "error"
    no-undefined: "error"
    no-unused-vars: "error"
    no-use-before-define: "warn"

    # Stylistic issues
    array-bracket-spacing: ["error", "never"]
    block-spacing: "error"
    brace-style: ["error", "1tbs"]
    camelcase: ["error", {"properties": "never"}]
    comma-dangle: ["error", "always-multiline"]
    comma-spacing: "error"
    comma-style: ["error", "last"]
    computed-property-spacing: ["error", "never"]
    consistent-this: ["error", "self"]
    eol-last: ["error", "always"]
    func-call-spacing: ["error", "never"]
    func-style: ["error", "expression", {"allowArrowFunctions": true}]
    indent: ["error", 4, {"SwitchCase": 1}]
    key-spacing: ["error", {"mode": "minimum"}]
    keyword-spacing: "error"
    max-len: ["error", 80]
    new-parens: "error"
    newline-after-var: "error"
    newline-before-return: "error"
    newline-per-chained-call: ["error", {"ignoreChainWithDepth": 3}]
    no-array-constructor: "error"
    no-inline-comments: "error"
    no-mixed-spaces-and-tabs: "error"
    no-multiple-empty-lines: ["error", {"max": 2, "maxEOF": 1}]
    no-nested-ternary: "error"
    no-new-object: "error"
    no-plusplus: "error"
    no-tabs: "error"
    no-trailing-spaces: "error"
    no-unneeded-ternary: "error"
    no-whitespace-before-property: "error"
    object-curly-spacing: ["error", "never"]
    one-var: "off"
    operator-linebreak: ["error", "after"]
    padded-blocks: ["error", "never"]
    quote-props: ["error", "consistent-as-needed"]
    quotes: ["error", "single", "avoid-escape"]
    semi-spacing: ["error", {"before": false, "after": true}]
    semi: ["error", "always"]
    space-before-blocks: ["error", "always"]
    space-before-function-paren: ["error", "always"]
    space-in-parens: ["error", "never"]
    space-infix-ops: "error"
    space-unary-ops: "error"
    spaced-comment: ["error", "always", {"block": {"markers": ["help"], "balanced": true}}]
    wrap-regex: "error"

    # ECMAScript 6
    arrow-body-style: ["error", "as-needed"]
    arrow-parens: ["error", "always"]
    arrow-spacing: "error"
    constructor-super: "error"
    generator-star-spacing: ["error", {"before": true, "after": false}]
    no-class-assign: "error"
    no-confusing-arrow: ["warn", {"allowParens": true}]
    no-const-assign: "error"
    no-dupe-class-members: "error"
    no-duplicate-imports: "error"
    no-new-symbol: "error"
    no-restricted-imports: "off"
    no-this-before-super: "error"
    no-useless-computed-key: "error"
    no-useless-constructor: "error"
    no-useless-rename: "error"
    no-var: "error"
    object-shorthand: ["error", "consistent-as-needed"]
    prefer-arrow-callback: "off"
    prefer-const: "error"
    prefer-numeric-literals: "warn"
    prefer-rest-params: "error"
    prefer-spread: "error"
    prefer-template: "error"
    require-yield: "error"
    rest-spread-spacing: ["error", "never"]
    sort-imports: "off"
    symbol-description: "error"
    template-curly-spacing: ["error", "never"]
    yield-star-spacing: ["error", "before"]
